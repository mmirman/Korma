step : tm -> tm -> type. %name step Step.


step/empty : step empty empty.

step/obj : step (obj A B) (obj A B).

step/left : step (left A) (left A).
step/right : step (right A) (right A).

step/app : step (@s E_F V) R
        <- step E_F (lam F _)
        <- step (F V) R.

step/getLeft : step (getLeft A) L'
            <- step A (obj L _)
            <- step L L'.

step/getRight : step (getRight A) R'
             <- step A (obj _ R)
             <- step R R'.

step-sw : tm -> tm -> tm -> tm -> type.
step-sw/left : step-sw (left L) LF _ O
            <- step (@s LF L) O. 
step-sw/right : step-sw (right R) _ RF O
            <- step (@s RF R) O.

step/switch  : step (switch LF RF I) O
            <- step I R
            <- step-sw R LF RF O.

%mode (step +A -B) (step-sw +A +LF +RF -B).
%worlds (tm-b) (step _ _) (step-sw _ _ _ _).
%unique (step +A -1B) (step-sw +A +B +C -1D).