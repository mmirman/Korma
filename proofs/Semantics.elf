step : tm -> tm -> type. %name step Step.

%mode step +A -B.

step/e : step A A.

step/trans : step A C <- step A B <- step B C.

step/@s : step (@s E1 E2) (@s E1' E2)
       <- step E1 E1'.

step/lam : step (@s (lam V _) E) (V E).


step/getLeft : step (getLeft (obj L _)) L.

step/getLeft-simp : step (getLeft A) (getLeft A')
                 <- not-value A 
                 <- step A A'.
             
step/getRight : step (getRight (obj _ R)) R.

step/getRight-simp : step (getRight A) (getRight A')
                  <- not-value A
                  <- step A A'.

step/switch-left  : step (switch LF _ I) (@s LF L)
		 <- step I (left L).

step/switch-right : step (switch _ RF I) (@s RF R)
		 <- step I (right R).


%worlds (tm-b) (step _ _).
